% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/utilities.R
\name{EAL_read_eml}
\alias{EAL_read_eml}
\title{Read EML into an emld list object}
\usage{
EAL_read_eml(path, eml)
}
\arguments{
\item{path}{(character) Path to the metadata template directory and where 
annotations.txt will be written.}

\item{eml}{(file) An EML .xml file located at \code{path}.}
}
\value{
An emld list object as similarly created by \code{EML::read_eml()}.
}
\description{
This function wraps \code{EML::read_eml()} with a layer of quality 
    control ensuring the returned emld list object has the same structure 
    as output by \code{EMLassemblyline::make_eml()} and can be used in 
    EMLassemblyline workflows.
}
\details{
When representing EML in the emld list structure, nodes that have 
    1 or more children are structured as a list of unnamed lists 
    (e.g. \code{list(dataTable = list("dataTable1", "dataTable2"))}) and
    this is the structure output by EMLassemblyline::make_eml(). However,
    EML::read_eml() removes the unnamed list when the node has only 1 child
    (e.g. \code{list(dataTable = "dataTable1")}), thereby breaking 
    EMLassemblyline code using \code{lapply()} to parse such nodes. 
    Currently this QC is selectively applied to annotatable nodes targeted
    by \code{template_annotations()}:
    
    \itemize{
      \item eml/dataset/dataTable
      \item eml/dataset/dataTable/attributeList/attribute
      \item eml/dataset/otherEntity
      \item eml/dataset/creator
      \item eml/dataset/contact
      \item eml/dataset/associatedParty
      \item eml/dataset/project/personnel
      \item eml/dataset/project/relatedProject
      \item eml/dataset/project/relatedProject/personnel
    }
    
    Extending support to all nodes capable of having 1 or more children is
    welcomed.
}
