% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/EAL_make_eml.R
\name{EAL_make_eml}
\alias{EAL_make_eml}
\title{Make EML metadata}
\usage{
EAL_make_eml(
  path,
  data.path = path,
  eml.path = path,
  dataset.title = NULL,
  temporal.coverage = NULL,
  geographic.description = NULL,
  geographic.coordinates = NULL,
  maintenance.description = NULL,
  data.table = NULL,
  data.table.name = data.table,
  data.table.description = NULL,
  data.table.quote.character = NULL,
  data.table.url = NULL,
  other.entity = NULL,
  other.entity.name = other.entity,
  other.entity.description = NULL,
  other.entity.url = NULL,
  provenance = NULL,
  user.id = NULL,
  user.domain = NULL,
  package.id = NULL,
  write.file = TRUE,
  return.obj = FALSE,
  x = NULL
)
}
\arguments{
\item{path}{(character) Path to the metadata template directory.}

\item{data.path}{(character) Path to the data directory.}

\item{eml.path}{(character) Path to the EML directory, where EML files are written.}

\item{dataset.title}{(character) Title of the dataset.}

\item{temporal.coverage}{(character) Beginning and ending dates of the dataset in the format 
"YYYY-MM-DD" (e.g. 
\code{temporal.coverage = c('2012-05-01', '2014-11-30')}).}

\item{geographic.description}{(character) Description of datasets geographic extent. Don't use this 
argument if geographic coverage is supplied by geographic_coverage.txt.}

\item{geographic.coordinates}{(character) Coordinates of datasets geographic extent. Coordinates are
listed in this order: North, East, South, West (e.g. 
\code{geographic.coordinates = c('28.38', '-119.95', '28.38', '-119.95')}).
Longitudes west of the prime meridian and latitudes south of the equator 
are negative. Don't use this argument if geographic coverage is supplied
by geographic_coverage.txt.}

\item{maintenance.description}{(character) A description of data collection status (e.g. "ongoing", 
"complete"), communicating the frequency of updates.}

\item{data.table}{(character; optional) Table file name. If more than one, then supply 
as a vector of character strings (e.g. 
\code{data.table = c("nitrogen.csv", "decomp.csv")}).}

\item{data.table.name}{(character; optional) A short descriptive name for the table. Defaults
to \code{data.table}. If more than one, then supply as a vector of 
character strings in the same order as listed in \code{data.table}.}

\item{data.table.description}{(character; optional) Table description. If more than one, then supply 
as a vector of character strings in the same order as listed in 
\code{data.table}.}

\item{data.table.quote.character}{(character; optional) Quote character used in \code{data.table}. If 
more than one, then supply as a vector of character strings in the same 
order as listed in \code{data.table}. If the quote character is a quotation, 
then enter \code{'"'}. If the quote character is an apostrophe, then 
enter \code{"'"}. If wanting to include quote characters for some but 
not all \code{data.table}, then use a "" for those that don't have a 
quote character (e.g. \code{data.table.quote.character = 
c("'", "")}).}

\item{data.table.url}{(character; optional) The publicly accessible URL from which 
\code{data.table} can be downloaded. If more than one, then supply as 
a vector of character strings in the same order as listed in 
\code{data.table}. If wanting to include URLs for some but not all
\code{data.table}, then use a "" for those that don't have a URL
(e.g. \code{data.table.url = c("", "/url/to/decomp.csv")}).}

\item{other.entity}{(character; optional) Name of \code{other.entity}(s) in this 
dataset. Use \code{other.entity} for all non-\code{data.table} files. 
\code{other.entity}(s) should be stored at \code{data.path}. If more 
than one, then supply as a vector of character strings (e.g. 
\code{other.entity = c('ancillary_data.zip', 'quality_control.R')}).}

\item{other.entity.name}{(character; optional) A short descriptive name for the other.entity. 
Defaults to \code{other.entity}. If more than one, then supply as a 
vector of character strings in the same order as listed in 
\code{other.entity}.}

\item{other.entity.description}{(character; optional) Description(s) of \code{other.entity}(s). If more 
than one, then supply as a vector of descriptions in the same order as 
listed in \code{other.entity}.}

\item{other.entity.url}{(character; optional) The publicly accessible URL from which 
\code{other.entity} can be downloaded. If more than one, then supply as 
a vector of character strings in the same order as listed in 
\code{other.entity}. If wanting to include URLs for some but not all
\code{other.entity}, then use a "" for those that don't have a URL
(e.g. \code{other.entity.url = c("", "/url/to/quality_control.R")}).}

\item{provenance}{(character; optional) EDI Data Repository Data package ID(s) 
corresponding to parent datasets from which this dataset was created 
(e.g. \code{knb-lter-cap.46.3}).}

\item{user.id}{(character; optional) Repository user identifier. If more than one, 
then enter as a vector of character strings (e.g. 
\code{c("user_id_1", "user_id_2")}). \code{user.id} sets the 
/eml/access/principal element for all \code{user.domain} except
"KNB", "ADC", and if \code{user.domain = NULL}.}

\item{user.domain}{(character; optional) Repository domain associated with 
\code{user.id}. Currently supported values are "EDI" 
(Environmental Data Initiative), "LTER" (Long-Term Ecological Research 
Network), "KNB" (The Knowledge Network for Biocomplexity), "ADC" (The 
Arctic Data Center). If you'd like your system supported please contact
maintainers of the ecocomDP R package. If using more than one 
\code{user.domain}, then enter as a vector of character strings (e.g. 
\code{c("user_domain_1", "user_domain_2")}) in the same order as 
corresponding \code{user.id}. If \code{user.domain} is missing then a 
default value "unknown" is assigned. \code{user.domain} sets the EML 
header "system" attribute and for all \code{user.domain}, except "KNB" 
and "ADC", sets the /eml/access/principal element attributes and values.}

\item{package.id}{(character; optional) Data package ID for the dataset described by this
EML. Ask your data repository for a package ID. Missing \code{package.id}
is assigned a UUID.}

\item{write.file}{(logical; optional) Whether to write the EML file.}

\item{return.obj}{(logical; optional) Whether to return the EML as an R object of class \code{EML object}. This EML object can be modified and written to file according to the \href{https://github.com/ropensci/EML}{EML R library}.}

\item{x}{(named list; optional) Alternative input to 
\code{make_eml()}. Use \code{template_arguments()} 
to create \code{x}.}
}
\value{
\itemize{
        \item{\strong{EML file} written to \code{eml.path}.}
        \item{\strong{EML object} when \code{return.obj = TRUE}.}
    }
}
\description{
Render the contents of metadata templates into EML, validate, and write
    to file.
}
\details{
\code{make_eml()} reads the contents of metadata templates, 
    auto-extracts additional metadata from the data entities, appends value 
    added content (e.g. resolving keywords to controlled vocabularies), and 
    adds all the metadata content to locations in the EML schema according 
    with best practice recommendations of scientists, data managers, and 
    data repositories. The EML is then validated against the schema and 
    written to file.
    
    Character encodings in tabular metadata templates are converted to UTF-8 
    via \code{enc2utf8()}. Characters in TextType metadata templates are not
    yet converted. Note: This may lead to an inaccuracy and disconnect 
    between values in the data objects and what is reported in the EML (e.g.
    a categorical variable listed in the EML may not be the same as it's 
    corresponding value in the data object). For this reason it's important 
    to work with UTF-8 encoded data and metadata.
}
